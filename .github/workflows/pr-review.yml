name: CodeGPT PR Review

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  review:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Set up Python environment for Django
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install Django dependencies
      working-directory: backend
      run: |
        python -m venv venv
        source venv/bin/activate
        pip install -r requirements.txt

    # Step 3: Set up Node.js environment for Next.js
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Install Next.js dependencies
      working-directory: frontend
      run: npm install

    # Step 4: Install OpenAI Python SDK
    - name: Install OpenAI Python SDK
      run: pip install openai

    # Step 5: Analyze Django and Next.js code with OpenAI API
    - name: Analyze Django and Next.js code
      env:
        OPENAI_API_KEY: ${{ secrets.CODEGPT_API_KEY }}
      run: |
        python - <<EOF
        import openai
        import os
        import glob

        # Set API key
        openai.api_key = os.environ["OPENAI_API_KEY"]

        # Helper function to generate code reviews
        def review_code(file_path, language):
            with open(file_path, 'r') as f:
                code = f.read()
            response = openai.ChatCompletion.create(
                model="gpt-4",
                messages=[
                    {"role": "system", "content": "You are a code reviewer."},
                    {"role": "user", "content": f"Review this {language} code:\n{code}"}
                ]
            )
            return response['choices'][0]['message']['content']

        # Review Python files
        python_files = glob.glob('backend/**/*.py', recursive=True)
        reviews = []
        for file in python_files:
            review = review_code(file, "Python")
            reviews.append({"file": file, "review": review})

        # Review JavaScript/TypeScript files
        js_files = glob.glob('frontend/**/*.{js,jsx,ts,tsx}', recursive=True)
        for file in js_files:
            review = review_code(file, "JavaScript/TypeScript")
            reviews.append({"file": file, "review": review})

        # Write reviews to a JSON file
        import json
        with open('reviews.json', 'w') as f:
            json.dump(reviews, f, indent=2)
        EOF

    # Step 6: Post Review Comments to PR
    - name: Post Review Comments
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const reviews = JSON.parse(fs.readFileSync('reviews.json', 'utf-8'));

          for (const review of reviews) {
            github.rest.pulls.createReviewComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
              body: `File: ${review.file}\n\nReview:\n${review.review}`,
              path: review.file.replace(/^.+\//, ''), // Adjust path if needed
              position: 1 // Position of the comment (customize for exact line comments)
            });
          }
